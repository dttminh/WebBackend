package com.roojai.radar.stub;

import grails.util.Environment;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-11-07T15:46:03.555+07:00
 * Generated source version: 3.1.8
 * 
 */
@WebServiceClient(name = "DpoService", 
                  wsdlLocation = "file:DpoService.wsdl",
                  targetNamespace = "http://towerswatson.com/rto/dpo/services/2010/01") 
public class DpoService_Service extends Service {

	private final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://towerswatson.com/rto/dpo/services/2010/01", "DpoService");
    public final static QName DefaultDpoServiceEndpoint = new QName("http://towerswatson.com/rto/dpo/services/2010/01", "DefaultDpoServiceEndpoint");
    public final static QName DefaultDpoServiceEndpoint2 = new QName("http://towerswatson.com/rto/dpo/services/2010/01", "DefaultDpoServiceEndpoint2");
    static {
        URL url = null;
        try { 
        	if( Environment.isDevelopmentMode() ){
        		url = new URL("file:DpoService.wsdl"); // for dev only
        	}else{
        		url =  new URL("classpath:DpoService.wsdl");//for production and uat
        	} 
        } catch (Exception e) {
            java.util.logging.Logger.getLogger(DpoService_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:DpoService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DpoService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DpoService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DpoService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public DpoService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DpoService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DpoService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns DpoService
     */
    @WebEndpoint(name = "DefaultDpoServiceEndpoint")
    public DpoService getDefaultDpoServiceEndpoint() {
        return super.getPort(DefaultDpoServiceEndpoint, DpoService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DpoService
     */
    @WebEndpoint(name = "DefaultDpoServiceEndpoint")
    public DpoService getDefaultDpoServiceEndpoint(WebServiceFeature... features) {
        return super.getPort(DefaultDpoServiceEndpoint, DpoService.class, features);
    }


    /**
     *
     * @return
     *     returns DpoService
     */
    @WebEndpoint(name = "DefaultDpoServiceEndpoint2")
    public DpoService getDefaultDpoServiceEndpoint2() {
        return super.getPort(DefaultDpoServiceEndpoint2, DpoService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DpoService
     */
    @WebEndpoint(name = "DefaultDpoServiceEndpoint2")
    public DpoService getDefaultDpoServiceEndpoint2(WebServiceFeature... features) {
        return super.getPort(DefaultDpoServiceEndpoint2, DpoService.class, features);
    }

}
